#!/bin/bash

BOLDGREEN="\033[1;32m"
BOLDWHITE="\033[1;97m"
ENDCOLOR="\033[0m"

staged=$(git diff --cached --name-only)

non_public=()

for file in $staged; do
    if grep -qE "^\s*public\s*:\s*false\s*$" "$file"; then
        non_public+=(${file})
    fi
done

if [ ${#non_public[@]} -gt 0 ]
then
    echo -e "${BOLDWHITE}--------------${ENDCOLOR}"
    echo -e "${BOLDGREEN}public : false\n${ENDCOLOR}"
    for file in ${non_public[@]}; do
        echo $file
    done
    echo -e "${BOLDWHITE}--------------${ENDCOLOR}"
    printf '\n'
    echo -e "${BOLDWHITE}-----------------------------------------${ENDCOLOR}"
    echo -e "${BOLDWHITE}Are you sure to unstage non-public files?"
    echo -e "${BOLDWHITE}-----------------------------------------${ENDCOLOR}"
    while true
    do

        printf "${BOLDGREEN}[y/n]${ENDCOLOR} : "

        read input < /dev/tty
        if [ $input == 'n' ]; then
            printf "\nSKIP\n\n"
            sleep 1
            break
        elif [ $input == 'y' ]; then
            for file in ${non_public[@]}; do
                git restore --staged "$file"
            done
            printf "\nDONE\n\n"
            sleep 1
            break;
        fi

    done
fi

echo -e "${BOLDWHITE}------------------------------${ENDCOLOR}"
echo -e "${BOLDWHITE}Are you sure to generate data?"
echo -e "${BOLDWHITE}------------------------------${ENDCOLOR}"
while true
do
    printf "${BOLDGREEN}[y/n]${ENDCOLOR} : "
    read input < /dev/tty
    if [ $input == 'n' ]; then
        printf "\nSKIP\n\n"
        sleep 1
        break
    elif [ $input == 'y' ]; then
        rm -rf data
        ./generateData.js
        git add data
        printf "\nDONE\n\n"
        sleep 1
        break;
    fi
done
